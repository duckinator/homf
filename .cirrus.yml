Lint_task:
  container:
    image: python:3.11-slim
  install_script:
    - pip install -U pip
    - pip install .
    - pip install .[lint] .[test]
  script:
    - pylint --version
    - bork run lint

Linux_task:
  alias: Linux tests
  container:
    matrix:
      - image: python:3.8-slim
      - image: python:3.9-slim
      - image: python:3.10-slim
      - image: python:3.11-slim
  install_script:
    - apt-get update
    - apt-get install -y git
    - pip install -U pip
    - pip install . .[test]
  script:
    - python3 --version
    - bork run test

macOS_task:
  alias: macOS tests
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-base:latest
  env:
    LC_ALL: en_US.UTF-8
    LANG: en_US.UTF-8
    PATH: ${HOME}/.pyenv/shims:${PATH}
    matrix:
      # https://formulae.brew.sh/formula/python@3.10
      - PYTHON: 3.8.16
      - PYTHON: 3.9.16
      - PYTHON: 3.10.9
      - PYTHON: 3.11.1
  brew_update_script:
    - brew update
  brew_install_script:
    # Per the pyenv homebrew recommendations.
    #  https://github.com/pyenv/pyenv/wiki#suggested-build-environment
    - brew install openssl readline sqlite3 xz zlib pyenv git
  pyenv_install_script:
    - pyenv install ${PYTHON}
    - pyenv global ${PYTHON}
    - pyenv rehash
  pip_install_script:
    - pip install -U pip
    - pip install .[test]
  script:
    - python3 --version
    - bork run test
  always:
    upload_results_artifacts:
      path: ./homf-junit.xml
      format: junit
      type: text/xml

FreeBSD_task:
  alias: FreeBSD tests
  freebsd_instance:
    image_family: freebsd-13-2
  env:
    matrix:
      - PYTHON: 3.8
      - PYTHON: 3.9
      - PYTHON: 3.10
      - PYTHON: 3.11
  install_script:
    - PY=`echo $PYTHON | tr -d '.'`
    - pkg install -y python${PY} git
    - python${PYTHON} -m ensurepip
  pip_install_script:
    - python${PYTHON} -m pip install -U pip
    - python${PYTHON} -m pip install .[test]
  script:
    - python${PYTHON} --version
    - bork run test
  always:
    upload_results_artifacts:
      path: ./homf-junit.xml
      format: junit
      type: text/xml

Windows_task:
  windows_container:
    image: cirrusci/windowsservercore:2019
  env:
    matrix:
      - PYTHON: 3.8.10
      - PYTHON: 3.9.13
      - PYTHON: 3.10.9
      - PYTHON: 3.11.1
  python_install_script:
    # https://docs.python.org/3.6/using/windows.html#installing-without-ui
    - ps: Invoke-WebRequest -Uri https://www.python.org/ftp/python/${env:PYTHON}/python-${env:PYTHON}-amd64.exe -OutFile C:\python-installer.exe
    - C:\python-installer.exe /quiet TargetDir=C:\Python SimpleInstall=1
  install_script:
    - C:\Python\python.exe -m pip install -U pip
    - C:\Python\python.exe -m pip install .[test]
  version_info_script:
    - C:\Python\python.exe --version
  test_script:
    - C:\Python\python.exe -m pytest --verbose
  always:
    upload_results_artifacts:
      path: ./homf-junit.xml
      format: junit
      type: text/xml

success_task:
  name: CI success
  container: {image: "busybox"}
  depends_on:
    - Lint
    - FreeBSD tests
    - Linux tests
    - macOS tests
    - Windows

# If homf/version.py is modified on the main branch, make a release.
Release_task:
  only_if: "changesInclude('homf/version.py') && $BRANCH == 'main' && $CIRRUS_CRON == ''"
  depends_on: [CI success]
  env:
    TWINE_USERNAME: "__token__"
    TWINE_PASSWORD: ENCRYPTED[...]
    BORK_GITHUB_TOKEN: ENCRYPTED[e67bc3aec2f14be284e1646e19eb6054ec29046c56f678b636d84771695f6d77cf4766a3dea6c2c3499dbec9eb5e0b02]
  container:
    image: python:3.11-slim
  install_script:
    - apt-get update
    - apt-get install -y git
    - pip install -U pip
    - pip3 install . .[test]
  build_script:
    - bork clean
    - bork build
  test_script:
    - bork run test
  release_script:
    - bork release
